# Please update the cartopy, test data, and sample data git references below if appropriate.


language: python
python:
  - 2.7

git:
  depth: 0

install:

  - export BIGGUS_REF="da8f19f197adff77e8071b0e04269c8b888a1fbf"
  - export BIGGUS_SUFFIX=$(echo "${BIGGUS_REF}" | sed "s/^v//")

  - export CARTOPY_REF="v0.10.0"
  - export CARTOPY_SUFFIX=$(echo "${CARTOPY_REF}" | sed "s/^v//")

  - export IRIS_TEST_DATA_REF="3378fe68c00ca7f31895ab6630a59a39ccef94e3"
  - export IRIS_TEST_DATA_SUFFIX=$(echo "${IRIS_TEST_DATA_REF}" | sed "s/^v//")

  - export IRIS_SAMPLE_DATA_REF="2e7c73504e3d675d97dc8a2c2939f9fd2cfe51f1"
  - export IRIS_SAMPLE_DATA_SUFFIX=$(echo "${IRIS_SAMPLE_DATA_REF}" | sed "s/^v//")

  - deactivate
  - wget http://repo.continuum.io/miniconda/Miniconda-3.3.0-Linux-x86_64.sh
  - chmod +x Miniconda-3.3.0-Linux-x86_64.sh
  - ./Miniconda-3.3.0-Linux-x86_64.sh -b
  - export PATH=/home/travis/miniconda/bin:$PATH
  - conda create --yes -n test_env -c nbren12 numpy=1.7.1 scipy=0.13.2 matplotlib=1.3.0 netcdf4=1.0.7 scipy=0.13.2
  - source activate test_env
  - conda install --yes -c nbren12 setuptools nose pep8 pyshp shapely udunits2 proj4 pyke geos

# biggus
  - wget -O biggus.zip https://github.com/SciTools/biggus/archive/${BIGGUS_REF}.zip
  - unzip -q biggus.zip
  - ln -s $(pwd)/biggus-${BIGGUS_SUFFIX} biggus
  - cd biggus
  - python setup.py install --user
  - cd ..

# cartopy
  - wget -O cartopy.zip https://github.com/SciTools/cartopy/archive/${CARTOPY_REF}.zip
  - unzip -q cartopy.zip
  - ln -s $(pwd)/cartopy-${CARTOPY_SUFFIX} cartopy
  - cd cartopy
  - python setup.py install --user
  - cd ..

# Pre-load Natural Earth data to avoid multiple, overlapping downloads.
# i.e. There should be no DownloadWarning reports in the log.
  - python -c 'import cartopy; cartopy.io.shapereader.natural_earth()'

# mo_unpack
  - wget https://puma.nerc.ac.uk/trac/UM_TOOLS/raw-attachment/wiki/unpack/unpack-030712.tgz
  - tar -xf unpack-030712.tgz
  - cd unpack-030712/libmo_unpack
#?  - gcc -c -fPIC -O4 -mfpmath=sse -msse -I include -D_LARGEFILE_SOURCE -D_LARGEFILE_SOURCE64 -D_FILE_OFFSET_BITS=64 *.c
  - gcc -c -fPIC -O4 -mfpmath=sse -msse -I include -D_LARGEFILE_SOURCE *.c
  - gcc -shared -Wl,-soname,libmo_unpack.so -o lib/libmo_unpack.so *.o
  - sudo cp lib/* /usr/local/lib
  - sudo cp include/* /usr/local/include
  - cd ../..

# iris test data
  - wget -O iris-test-data.zip https://github.com/SciTools/iris-test-data/archive/${IRIS_TEST_DATA_REF}.zip
  - unzip -q iris-test-data.zip
  - ln -s $(pwd)/iris-test-data-${IRIS_TEST_DATA_SUFFIX} iris-test-data

# iris sample data
  - wget -O iris-sample-data.zip https://github.com/SciTools/iris-sample-data/archive/${IRIS_SAMPLE_DATA_REF}.zip
  - unzip -q iris-sample-data.zip
  - ln -s $(pwd)/iris-sample-data-${IRIS_SAMPLE_DATA_SUFFIX} iris-sample-data
  
# iris
  - python setup.py --with-unpack build_ext --inplace -I/usr/local/include -L/usr/local/lib -R/usr/local/lib
  - python setup.py std_names
  - echo "[System]" > lib/iris/etc/site.cfg
  - echo "udunits2_path = /home/travis/miniconda/envs/test_env/lib/libudunits2.so" >> lib/iris/etc/site.cfg
  - echo "[Resources]" >> lib/iris/etc/site.cfg
  - echo "sample_data_dir = $(pwd)/iris-sample-data/sample_data" >> lib/iris/etc/site.cfg
  - echo "test_data_dir = $(pwd)/iris-test-data/test_data" >> lib/iris/etc/site.cfg
  - ln -s $(pwd)/lib/iris /home/travis/.local/lib/python2.7/site-packages/iris
  - python setup.py pyke_rules

script:
  - python -c "import numpy as np; print np.__version__"
